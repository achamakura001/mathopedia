"""Rename name column to topic in topics table

Revision ID: e21b3d6cd509
Revises: 8c471b49145b
Create Date: 2025-06-30 18:00:10.643449

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e21b3d6cd509'
down_revision = '8c471b49145b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Add the new topic column
    with op.batch_alter_table('topics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('topic', sa.String(length=100), nullable=True))
    
    # Step 2: Copy data from name to topic
    connection = op.get_bind()
    connection.execute(sa.text("UPDATE topics SET topic = name"))
    
    # Step 3: Make topic column non-nullable
    with op.batch_alter_table('topics', schema=None) as batch_op:
        batch_op.alter_column('topic', 
                            existing_type=sa.String(length=100),
                            nullable=False)
    
    # Step 4: Drop the old constraint and create new one
    with op.batch_alter_table('topics', schema=None) as batch_op:
        batch_op.drop_constraint('unique_topic_grade', type_='unique')
        batch_op.create_unique_constraint('unique_topic_grade', ['topic', 'grade_level'])
    
    # Step 5: Drop the old name column
    with op.batch_alter_table('topics', schema=None) as batch_op:
        batch_op.drop_column('name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Add the old name column back
    with op.batch_alter_table('topics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', mysql.VARCHAR(length=100), nullable=True))
    
    # Step 2: Copy data from topic to name
    connection = op.get_bind()
    connection.execute(sa.text("UPDATE topics SET name = topic"))
    
    # Step 3: Make name column non-nullable
    with op.batch_alter_table('topics', schema=None) as batch_op:
        batch_op.alter_column('name', 
                            existing_type=mysql.VARCHAR(length=100),
                            nullable=False)
    
    # Step 4: Update constraints
    with op.batch_alter_table('topics', schema=None) as batch_op:
        batch_op.drop_constraint('unique_topic_grade', type_='unique')
        batch_op.create_unique_constraint('unique_topic_grade', ['name', 'grade_level'])
    
    # Step 5: Drop the topic column
    with op.batch_alter_table('topics', schema=None) as batch_op:
        batch_op.drop_column('topic')

    # ### end Alembic commands ###
